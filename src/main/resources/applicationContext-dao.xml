<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:c="http://www.springframework.org/schema/c" 
	xmlns:cache="http://www.springframework.org/schema/cache" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:lang="http://www.springframework.org/schema/lang" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<bean id="sqls" name="sqls" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map>
				<entry key="getProductSolrCollection1DataFromDatabaseInBatches">
					<value>
						<![CDATA[SELECT t.*  FROM (SELECT ROWNUM AS rn, t.* FROM 
									(
									select pc.pid_color_id as "id",
									pc.nrf_color as "pidColor",
									pc.nrf_color_name as "nrfColorDesc",
									p.brand_code as "brandCode",
									p.vendor_id as "vendorId",
									p.department_id as "departmentId",
									p.pid as "pid",
									p.pid_id as "pidId",
									p.class_id as "classId",
									p.product_type_id as "productTypeId",
									p.pid_description as "pidDescription",
									--p.place_holder_flag as "isPlaceHolder",
									pc.active_flag as "activeFlag",
									pc.MERCH_APPROVED_FLAG as "isMerchApproved",
									p.PLACE_HOLDER_FLAG as "isPIDPlaceHolder",
									pc.PLACE_HOLDER_FLAG as "isPIDColorPlaceHolder",
									p.ACTIVE_FLAG as "isPIDActiveFlag",
									p.DIVISION_ID as "divisionId",
									p.MASTER_STYLE_ID as "masterStyleId",
									pc.SUBCLASS_ID as "subclassId"
									from PRT_PID_COLOR pc left join PRT_PID  p
                  					on p.pid_id = pc.pid_id 
                  					where UPPER(p.brand_code) in ('MCY', 'BLM')
									order by pc.PID_COLOR_ID ASC) t WHERE ROWNUM <= ?) t WHERE rn >= ?]]>
					</value>
				</entry>
				<entry key="getProductSolrCollection1DataFromDatabaseInBatchesForTheSpecifiedElapsedTime">
					<value>
						<![CDATA[SELECT t.*  FROM (SELECT ROWNUM AS rn, t.* FROM 
									(
									select pc.pid_color_id as "id",
									pc.nrf_color as "pidColor",
									pc.nrf_color_name as "nrfColorDesc",
									p.brand_code as "brandCode",
									p.vendor_id as "vendorId",
									p.department_id as "departmentId",
									p.pid as "pid",
									p.pid_id as "pidId",
									p.class_id as "classId",
									p.product_type_id as "productTypeId",
									p.pid_description as "pidDescription",
									--p.place_holder_flag as "isPlaceHolder",
									pc.active_flag as "activeFlag",
									pc.MERCH_APPROVED_FLAG as "isMerchApproved",
									p.PLACE_HOLDER_FLAG as "isPIDPlaceHolder",
									pc.PLACE_HOLDER_FLAG as "isPIDColorPlaceHolder",
									p.ACTIVE_FLAG as "isPIDActiveFlag",
									p.DIVISION_ID as "divisionId",
									p.MASTER_STYLE_ID as "masterStyleId",
									pc.SUBCLASS_ID as "subclassId"
									from PRT_PID_COLOR pc left join PRT_PID  p
                  					on p.pid_id = pc.pid_id 
                  					where UPPER(p.brand_code) in ('MCY', 'BLM') and pc.last_updated > TO_TIMESTAMP(TO_CHAR(CURRENT_TIMESTAMP - INTERVAL '$IntervalValue' $IntervalUnit , 'DD-MON-YY HH:MI:SS')) 
									order by pc.PID_COLOR_ID ASC) t WHERE ROWNUM <= ?) t WHERE rn >= ?]]>
					</value>
				</entry>
				<entry key="getProductSolrCollection1DataFromDatabaseInBatchesWithProductTypeJoin">
					<value>
						<![CDATA[SELECT t.*  FROM (SELECT ROWNUM AS rn, t.* FROM 
									(
									select pc.pid_color_id as "id",
									pc.nrf_color as "pidColor",
									pc.nrf_color_name as "nrfColorDesc",
									p.brand_code as "brandCode",
									p.vendor_id as "vendorId",
									p.department_id as "departmentId",
									p.pid as "pid",
									p.pid_id as "pidId",
									p.class_id as "classId",
									pt.product_Type_name as "productType",
									p.product_type_id as "productTypeId",
									p.pid_description as "pidDescription",
									p.place_holder_flag as "isPlaceHolder",
									pc.active_flag as "activeFlag",
									pc.MERCH_APPROVED_FLAG as "isMerchApproved",
									p.PLACE_HOLDER_FLAG as "isPIDPlaceHolder",
									pc.PLACE_HOLDER_FLAG as "isPIDColorPlaceHolder",
									p.ACTIVE_FLAG as "isPIDActiveFlag",
									p.DIVISION_ID as "divisionId",
									p.MASTER_STYLE_ID as "masterStyleId",
									pc.SUBCLASS_ID as "subclassId"
									from PRT_PID_COLOR pc left join PRT_PID  p
                  					on p.pid_id = pc.pid_id
                  					left join PRT_PRODUCT_TYPE  pt
									on p.PRODUCT_TYPE_ID = pt.PRODUCT_TYPE_ID 
									where UPPER(p.brand_code) in ('MCY', 'BLM')
									order by pc.PID_COLOR_ID ASC) t WHERE ROWNUM <= ?) t WHERE rn >= ?]]>
					</value>
				</entry>
				<entry key="getProductSolrCollection1DataForSelectedPidIds">
					<value>
						<![CDATA[select pc.pid_color_id as "id",
									pc.nrf_color as "pidColor",
									pc.nrf_color_name as "nrfColorDesc",
									p.brand_code as "brandCode",
									p.vendor_id as "vendorId",
									p.department_id as "departmentId",
									p.pid as "pid",
									p.pid_id as "pidId",
									p.class_id as "classId",
									p.product_type_id as "productTypeId",
									p.pid_description as "pidDescription",
									p.place_holder_flag as "isPlaceHolder",
									pc.active_flag as "activeFlag",
									pc.MERCH_APPROVED_FLAG as "isMerchApproved",
									p.PLACE_HOLDER_FLAG as "isPIDPlaceHolder",
									pc.PLACE_HOLDER_FLAG as "isPIDColorPlaceHolder",
									p.ACTIVE_FLAG as "isPIDActiveFlag",
									p.DIVISION_ID as "divisionId",
									p.MASTER_STYLE_ID as "masterStyleId",
									pc.SUBCLASS_ID as "subclassId"
									from PRT_PID_COLOR pc left join PRT_PID  p
                  					on p.pid_id = pc.pid_id
                  					where UPPER(p.brand_code) in ('MCY', 'BLM') and pc.pid_id in (pidIDList)
                  					order by pc.PID_COLOR_ID ASC]]>
					</value>
				</entry>
				<entry key="getProductSolrCollection1DataForSelectedPidColorIds">
					<value>
						<![CDATA[select pc.pid_color_id as "id",
									pc.nrf_color as "pidColor",
									pc.nrf_color_name as "nrfColorDesc",
									p.brand_code as "brandCode",
									p.vendor_id as "vendorId",
									p.department_id as "departmentId",
									p.pid as "pid",
									p.pid_id as "pidId",
									p.class_id as "classId",
									p.product_type_id as "productTypeId",
									p.pid_description as "pidDescription",
									p.place_holder_flag as "isPlaceHolder",
									pc.active_flag as "activeFlag",
									pc.MERCH_APPROVED_FLAG as "isMerchApproved",
									p.PLACE_HOLDER_FLAG as "isPIDPlaceHolder",
									pc.PLACE_HOLDER_FLAG as "isPIDColorPlaceHolder",
									p.ACTIVE_FLAG as "isPIDActiveFlag",
									p.DIVISION_ID as "divisionId",
									p.MASTER_STYLE_ID as "masterStyleId",
									pc.SUBCLASS_ID as "subclassId"
									from PRT_PID_COLOR pc left join PRT_PID  p
									on p.pid_id = pc.pid_id
									where UPPER(p.brand_code) in ('MCY', 'BLM') and pc.pid_color_id in (pidColorIDList)
									order by pc.PID_COLOR_ID ASC]]>
					</value>
				</entry>
			</map>
		</property>
	</bean>
	<bean id="springDaoImpl" name="springDaoImpl" class="com.debashish.solr.dataCopier.dao.SpringDaoImpl">
		<property name="sqls" ref="sqls"/>
	</bean>
</beans>